From 2d647cebfc85f5bf30e2eca129f9a44695b6ac24 Mon Sep 17 00:00:00 2001
From: Wei-Chiu Chuang <weichiu@cloudera.com>
Date: Wed, 31 Mar 2021 12:14:35 +0800
Subject: [PATCH 2/2] Update

Change-Id: Ie12b476b6c1f0bc6e688158fdddf3496eb6562ad
---
 .../main/java/org/apache/hadoop/mapred/ShuffleHandler.java | 7 +++++--
 .../java/org/apache/hadoop/mapred/TestShuffleHandler.java  | 2 ++
 .../src/test/resources/log4j.properties                    | 2 +-
 3 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java
index b9f7772725a..0c097f9995a 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java
@@ -563,7 +563,7 @@ protected void serviceStart() throws Exception {
     bootstrap.option(ChannelOption.SO_BACKLOG,
         conf.getInt(SHUFFLE_LISTEN_QUEUE_SIZE,
             DEFAULT_SHUFFLE_LISTEN_QUEUE_SIZE))
-        .option(ChannelOption.SO_KEEPALIVE, true)
+        .childOption(ChannelOption.SO_KEEPALIVE, true)
         .childHandler(pipelineFact);
     port = conf.getInt(SHUFFLE_PORT_CONFIG_KEY, DEFAULT_SHUFFLE_PORT);
     ch = bootstrap.bind(new InetSocketAddress(port)).sync().channel();
@@ -921,6 +921,8 @@ public void channelActive(ChannelHandlerContext ctx)
         throws Exception {
       super.channelActive(ctx);
 
+      LOG.debug("accepted connections={}", accepted.size());
+
       if ((maxShuffleConnections > 0) && (accepted.size() >= maxShuffleConnections)) {
         LOG.info(String.format("Current number of shuffle connections (%d) is " + 
             "greater than or equal to the max allowed shuffle connections (%d)", 
@@ -936,6 +938,7 @@ public void channelActive(ChannelHandlerContext ctx)
         return;
       }
       accepted.add(ctx.channel());
+      LOG.debug("added channel {}. accepted size {}", ctx.channel(), accepted.size());
     }
 
     @Override
@@ -1339,7 +1342,7 @@ protected void sendError(ChannelHandlerContext ctx, String msg,
       //    Unpooled.copiedBuffer(msg, CharsetUtil.UTF_8));
 
       // Close the connection as soon as the error message is sent.
-      ctx.channel().write(response).addListener(ChannelFutureListener.CLOSE);
+      ctx.channel().writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);
     }
 
     @Override
diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
index 9a5e6485a93..9654605bfaf 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/java/org/apache/hadoop/mapred/TestShuffleHandler.java
@@ -663,6 +663,8 @@ protected ChannelFuture sendMapOutput(ChannelHandlerContext ctx,
           ShuffleHeader.DEFAULT_HTTP_HEADER_VERSION);
     }
 
+    // FIXME: connections are accepted in parallel; it's not sequential.
+    // FIXME: rewrite this test.
     // Try to open numerous connections
     for (int i = 0; i < connAttempts; i++) {
       conns[i].connect();
diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/resources/log4j.properties b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/resources/log4j.properties
index 3fff63bc263..ccb275c6df3 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/resources/log4j.properties
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/test/resources/log4j.properties
@@ -12,7 +12,7 @@
 
 # log4j configuration used during build and unit tests
 
-log4j.rootLogger=info,stdout
+log4j.rootLogger=debug,stdout
 log4j.threshold=ALL
 log4j.appender.stdout=org.apache.log4j.ConsoleAppender
 log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
-- 
2.24.3 (Apple Git-128)

